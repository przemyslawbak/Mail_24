<Window x:Class="Mail_24.MainWindow"
        x:Name="myWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:Mail_24.ViewModels"
        mc:Ignorable="d"
		Title="Mail_24" Height="510" Width="750">
    <Window.DataContext>
        <vm:MainViewModel/>
        <!--odpala konstruktor klasy dla pobrania danych-->
        <!--korzysta z enumeracji w modelu-->
    </Window.DataContext>
    <Window.Resources>
        <Style x:Key="labelStyle" TargetType="Label">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="buttonStyle" TargetType="Button">
            <Setter Property="Background" Value="#D2D5DE"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="45"/>
        </Style>
        <Style x:Key="tbStyle" TargetType="TextBox">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Height" Value="25"/>
        </Style>
    </Window.Resources>
    <Grid Background="#F2F2F2" FocusManager.FocusedElement="{Binding ElementName=tbTematWiadomosci}">
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition Height="20"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition Width="130"/>
        </Grid.ColumnDefinitions>
        <GroupBox Header="Temat wiadomości"
				  Grid.Row="0"
				  Grid.Column="0" Grid.ColumnSpan="4"/>
        <GroupBox Header="Wiadomość"
				  Grid.Row="1" Grid.RowSpan="6"
				  Grid.Column="0" Grid.ColumnSpan="4"/>
        <TextBox x:Name="tbTematWiadomosci"
            Grid.Row="0"
				   Grid.Column="0" Grid.ColumnSpan="4"
				 Height="30"
				   Background="#ffffff"
				   Margin="5"
				 TextWrapping="Wrap"
                 AutoWordSelection="True"
                 AllowDrop="True"
                 Text="{Binding TematWiadomosc, Mode=TwoWay}"
                 ToolTip="Wpisz temat rozsyłanej wiadomości">
        </TextBox>
        <TextBox x:Name="tbTrescWiadomosci"
            Grid.Row="1" Grid.RowSpan="6"
				   Grid.Column="0" Grid.ColumnSpan="4"
				   Background="#ffffff"
				   Margin="5,20,5,5"
				 TextWrapping="Wrap"
                 AcceptsReturn="True"
                 AcceptsTab="True"
                 AutoWordSelection="True"
                 AllowDrop="True"
                  Text="{Binding TrescWiadomosc, Mode=TwoWay}"
                 ToolTip="Wpisz treść wiadomości jaką chcesz rozesłać">
        </TextBox>
        <!--START-->
        <Button Grid.Row="0"
				Grid.Column="4"
                Background="#80B584"
				Style="{StaticResource buttonStyle}"
                 Visibility="{Binding Path=Status, Converter={StaticResource boolStart}}"
                Command="{Binding Path=StartSending}"
                ToolTip="Rozpocznij wysyłanie">
            <TextBlock Text="START" TextWrapping="Wrap" TextAlignment="Center"/>
        </Button>
        <!--STOP-->
        <Button Grid.Row="0"
				Grid.Column="4"
                Background="#FF8A8A"
				Style="{StaticResource buttonStyle}"
                Visibility="{Binding Path=Status, Converter={StaticResource boolStop}}"
                 Command="{Binding Path=StopSending}"
                ToolTip="Zakończ wysyłanie">
            <TextBlock Text="STOP" TextWrapping="Wrap" TextAlignment="Center"/>
        </Button>
        <Button Grid.Row="1"
				Grid.Column="4"
				Style="{StaticResource buttonStyle}"
                Command="{Binding Path=OpenWindowUstawienia}"
                IsEnabled="{Binding Path=Status, Converter={StaticResource boolButton}}"
                ToolTip="Ustaw godzinne i dobowe limity wysyłania &#x0a;wiadomości oraz ich częstotliwość">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                    <ei:ChangePropertyAction TargetObject="{Binding}" PropertyName="WindowHeight" Value="360"/>
                    <ei:ChangePropertyAction TargetObject="{Binding}" PropertyName="WindowWidth" Value="350"/>
                    <ei:ChangePropertyAction TargetObject="{Binding}" PropertyName="Caption" Value="Ustawienia limitów"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <TextBlock Text="Limity wysyłania" TextWrapping="Wrap" TextAlignment="Center"/>
        </Button>
        <Button Grid.Row="2"
				Grid.Column="4"
				Style="{StaticResource buttonStyle}"
				Command="{Binding Path=OpenWindowKonto}"
                IsEnabled="{Binding Path=Status, Converter={StaticResource boolButton}}"
                ToolTip="Dodawaj lub usuwaj konta mailowe &#x0a;z których wiadomości będą wysyłane">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                    <ei:ChangePropertyAction TargetObject="{Binding}" PropertyName="WindowHeight" Value="410"/>
                    <ei:ChangePropertyAction TargetObject="{Binding}" PropertyName="WindowWidth" Value="500"/>
                    <ei:ChangePropertyAction TargetObject="{Binding}" PropertyName="Caption" Value="Ustawienia poczty SMTP"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <TextBlock Text="Zarządzaj kontami" TextWrapping="Wrap" TextAlignment="Center"/>
        </Button>
        <Button Grid.Row="3"
				Grid.Column="4"
				Style="{StaticResource buttonStyle}"
				Command="{Binding Path=OpenWindowAdresEmail}"
                IsEnabled="{Binding Path=Status, Converter={StaticResource boolButton}}"
                ToolTip="Zarządzaj listami adresów e-mail &#x0a;na które będą wysyłane wiadomości">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                    <ei:ChangePropertyAction TargetObject="{Binding}" PropertyName="WindowHeight" Value="460"/>
                    <ei:ChangePropertyAction TargetObject="{Binding}" PropertyName="WindowWidth" Value="500"/>
                    <ei:ChangePropertyAction TargetObject="{Binding}" PropertyName="Caption" Value="Ustawienia adresów"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <TextBlock Text="Adresy wysyłania" TextWrapping="Wrap" TextAlignment="Center"/>
        </Button>
        <Button Grid.Row="4"
				Grid.Column="4"
				Style="{StaticResource buttonStyle}"
				Command="{Binding Path=DodajZalacznik}"
                IsEnabled="{Binding Path=Status, Converter={StaticResource boolButton}}"
                ToolTip="Dodaj nowy załącznik">
            <TextBlock Text="Dodaj załącznik" TextWrapping="Wrap" TextAlignment="Center"/>
        </Button>
        <GroupBox Header="Dodane załączniki"
				  Grid.Column="4"
				  Grid.Row="5" Grid.RowSpan="2"/>
        <ListBox x:Name="lbListaZalacznikow" Margin="5,25,5,5" ItemsSource="{Binding Path=ListaZalacznikow}"
				 Grid.Column="4"
				 Grid.Row="5" Grid.RowSpan="2">
            <!--szablon rekordu-->
            <ListBox.ContextMenu>
                <ContextMenu DataContext="{Binding Path=PlacementTarget, RelativeSource={RelativeSource Self}}">
                    <MenuItem
                        Header="Usun"
                        Command="{Binding Path=DataContext.UsunZalacznik}"
                        CommandParameter="{Binding Path=SelectedIndex}"
                        />
                </ContextMenu>
            </ListBox.ContextMenu>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <!--Foreground binding pobiera bool dla realizacji, Foreground Resource nadaje kolor-->
                        <!--TextDecorations pobiera bool, i skreśla na podstawie bool, jeśli wykonany-->
                        <TextBlock Text="{Binding Path=NazwaZalacznika, Mode=OneWay}" Tag="{Binding ElementName=myWindow}">
                        </TextBlock>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <DockPanel Grid.Column="0" Grid.ColumnSpan="4"
            Grid.Row="7">
            <TextBlock x:Name="tbStatus"
                DockPanel.Dock="Left"
            Style="{StaticResource tbDockPanelStatus}"
                       Foreground="Gray">
            Status:
            <Run Text="{Binding Path=Status, Mode=OneWay,
							Converter={StaticResource statusToString}}"
							Foreground="{Binding Path=Status, Mode=OneWay,
							Converter={StaticResource statusToBrush}}" />
            </TextBlock>

            <TextBlock DockPanel.Dock="Left" Foreground="Gray" Margin="2,0,0,0"
                       Style="{StaticResource tbDockPanelStatus}"
                       Visibility="{Binding Path=Status, Converter={StaticResource boolStop}}">
            na adres
                <Run Text="{Binding Path=TerazWysylanyAdres}" Foreground="Black"/>
            </TextBlock>
            <TextBlock DockPanel.Dock="Left" Foreground="Gray" Margin="2,0,0,0"
                       Style="{StaticResource tbDockPanelStatus}"
                      Visibility="{Binding Path=Status, Converter={StaticResource boolStop}}">
            z konta
                 <Run Text="{Binding Path=TerazWysylaneKonto}" Foreground="Black"/>
            </TextBlock>
            <TextBlock DockPanel.Dock="Right"
                       HorizontalAlignment="Right"
                       Grid.Column="7" Grid.Row="7"
                       Style="{StaticResource tbDockPanelStatus}"
                       Foreground="Gray">
            Limity
                h: <Run Text="{Binding Path=GodzinowoWidok}"/>/<Run Text="{Binding Path=GodzinowoModel}"/>
                d: <Run Text="{Binding Path=DobowoWidok}"/>/<Run Text="{Binding Path=DobowoModel}"/>
            </TextBlock>
        </DockPanel>
    </Grid>
</Window>
