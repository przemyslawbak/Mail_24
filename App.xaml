<Application x:Class="Mail_24.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Mail_24"
             xmlns:vm="clr-namespace:Mail_24.ViewModels"
             xmlns:views="clr-namespace:Mail_24.Views"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <DataTemplate DataType="{x:Type vm:Konta}">
            <views:KontaView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:Adres}">
            <views:AdresyView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:Limity}">
            <views:UstawieniaView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:DodajAdresViewModel}">
            <views:DodajAdresView/>
        </DataTemplate>
        <!--STYLE-->
        <Style x:Key="buttonStyle" TargetType="Button">
            <Setter Property="Background" Value="#D2D5DE"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="Width" Value="120"/>
        </Style>
        <Style x:Key="tbStyle" TargetType="TextBox">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Height" Value="25"/>
        </Style>
        <Style x:Key="labelStyle" TargetType="Label">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="tbDockPanelStatus" TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" Value="10,0,0,0"/>
            <Setter Property="FontSize" Value="10"/>
        </Style>
        <!--PRZYCISKI-->
        <Style x:Key="dodajButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#D2D5DE"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="Width" Value="120"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=tbAdresSerwera, UpdateSourceTrigger=PropertyChanged}" Value="true">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=tbPort, UpdateSourceTrigger=PropertyChanged}" Value="true">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=tbImieNazwisko, UpdateSourceTrigger=PropertyChanged}" Value="true">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=tbAdresEmail, UpdateSourceTrigger=PropertyChanged}" Value="true">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Text.Length, ElementName=tbHaslo, UpdateSourceTrigger=PropertyChanged}" Value="0">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="zapiszUstawieniaButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#D2D5DE"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="Width" Value="120"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=tbNaGodzine, UpdateSourceTrigger=PropertyChanged}" Value="true">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=tbNaDzien, UpdateSourceTrigger=PropertyChanged}" Value="true">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=tbHowOften, UpdateSourceTrigger=PropertyChanged}" Value="true">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <!--VALIDATION TEMPLATE-->
        <ControlTemplate x:Key="validationTemplate">
            <DockPanel>
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                    <TextBlock FontSize="10" TextWrapping="Wrap" Width="130"
                    Foreground="Red" FontWeight="Thin"  Margin="2,0,0,0"
                    Text="{Binding ElementName=ErrorAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
                </StackPanel>
                <AdornedElementPlaceholder
        x:Name="ErrorAdorner" ></AdornedElementPlaceholder>
            </DockPanel>
        </ControlTemplate>
        <!--KONWERTERY-->
        <local:AktywnyToString x:Key="aktywnyToString"/>
        <local:AktywnyKolor x:Key="aktywnyKolor"/>
        <local:BooleanStart x:Key="boolStart" />
        <local:BooleanStop x:Key="boolStop" />
        <local:KontaConverter x:Key="kontaConverter"/>
        <local:StatusToString x:Key="statusToString"/>
        <local:StatusToBrush x:Key="statusToBrush"/>
        <local:BoolButon x:Key="boolButton"/>
    </Application.Resources>
</Application>
